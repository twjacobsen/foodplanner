{
  "name": "fileify",
  "version": "0.3.1",
  "description": "Browserify middleware to load entire files into javascript variables",
  "main": "index.js",
  "directories": {
    "lib": ".",
    "example": "example"
  },
  "dependencies": {
    "findit": ">=0.1.1 <0.2",
    "seq": ">=0.2.5 <0.3"
  },
  "devDependencies": {
    "browserify": ">=1.2.7 <1.3",
    "expresso": "0.7.x"
  },
  "scripts": {
    "test": "expresso"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/substack/node-fileify.git"
  },
  "keywords": [
    "browserify",
    "bundle",
    "middleware",
    "file"
  ],
  "author": {
    "name": "James Halliday",
    "email": "mail@substack.net",
    "url": "http://substack.net"
  },
  "license": "MIT/X11",
  "engine": {
    "node": ">=0.4"
  },
  "readme": "fileify\n=======\n\nMiddleware for browserify to load non-js files like templates.\n\nmethods\n=======\n\n````javascript\nvar express = require('express'); // or connect, whatevs\nvar app = express.createServer();\nvar fileify = require('fileify');\n\nvar bundle = browserify();\nbundle.use(fileify);\napp.use(bundle)\n````\n\nfileify(name, dir, opts)\n------------------------\n\nMake the files in `dir` available through `require(name)`.\n\n`require(name)` will then return the files hashed by filename.\n\nfileify will do a recursive traversal of `dir` and return all the files\nexcept for hidden ones unless you specify a callback for `opts.extension`.\n\nReturns a middleware function with a '.end()' function to stop all the watches\nin watch mode.\n\nopts can have:\n\n* watch - if true, update the fileified bundle when files change\n\n* extension - a filter function, regexp, string extension, or array of\nextensions to limit extensions to\n\nIf opts is not an object and not an array it will be interpreted as the\nextension.\n\n\nexample\n=======\n\nsimple/server.js\n\n````javascript\nvar express = require('express');\nvar app = express.createServer();\n\napp.use(express.static(__dirname));\napp.listen(8080);\nconsole.log('Listening on 8080');\n\nvar browserify = require('browserify');\nvar bundle = browserify({\n    require : { jquery : 'jquery-browserify' }\n});\napp.use(bundle);\n\nvar fileify = require('fileify');\nbundle.use(fileify('files', __dirname + '/files'));\n````\n\n````html\n<html>\n  <head>\n    <script type=\"text/javascript\" src=\"/browserify.js\"></script>\n    <script type=\"text/javascript\">\n      var files = require('files')\n      var $ = require('jquery');\n      \n      window.onload = function () {\n        Object.keys(files).forEach(function (name) {\n          var div = $('<div>').appendTo($('#files'));\n          \n          $('<div>')\n            .text(name)\n            .appendTo(div)\n          ;\n          $('<textarea>')\n            .val(files[name])\n            .appendTo(div)\n          ;\n        });\n      };\n    </script>\n  </head>\n  <body>\n    <div id=\"files\"></div>\n  </body>\n</html>\n````\n\ninstallation\n============\n\nWith [npm](http://npmjs.org) do:\n\n    npm install fileify\n\nlicense\n=======\n\nMIT/X11\n",
  "_id": "fileify@0.3.1",
  "_from": "fileify@0.3.x"
}
